// MFC_UI_TEST.cpp : 응용 프로그램에 대한 클래스 동작을 정의합니다.
//

#include "stdafx.h"
#include "MFC_UI_TEST.h"

#include "mrcInit.h"
#include "./mrcSigma/mrcSig.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


//#ifdef _DEBUG
#pragma comment(linker, "/entry:WinMainCRTStartup /subsystem:console")
//#endif


// CMFC_UI_TESTApp

BEGIN_MESSAGE_MAP(CMFC_UI_TESTApp, CWinApp)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CMFC_UI_TESTApp 생성

CMFC_UI_TESTApp::CMFC_UI_TESTApp()
{
	// TODO: 여기에 생성 코드를 추가합니다.
	// InitInstance에 모든 중요한 초기화 작업을 배치합니다.
}


// 유일한 CMFC_UI_TESTApp 개체입니다.

CMFC_UI_TESTApp theApp;


// CMFC_UI_TESTApp 초기화

BOOL CMFC_UI_TESTApp::InitInstance()
{
	// 응용 프로그램 매니페스트가 ComCtl32.dll 버전 6 이상을 사용하여 비주얼 스타일을
	// 사용하도록 지정하는 경우, Windows XP 상에서 반드시 InitCommonControlsEx()가 필요합니다.
	// InitCommonControlsEx()를 사용하지 않으면 창을 만들 수 없습니다.
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 응용 프로그램에서 사용할 모든 공용 컨트롤 클래스를 포함하도록
	// 이 항목을 설정하십시오.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinApp::InitInstance();

	// 표준 초기화
	// 이들 기능을 사용하지 않고 최종 실행 파일의 크기를 줄이려면
	// 아래에서 필요 없는 특정 초기화
	// 루틴을 제거해야 합니다.
	// 해당 설정이 저장된 레지스트리 키를 변경하십시오.
	// TODO: 이 문자열을 회사 또는 조직의 이름과 같은
	// 적절한 내용으로 수정해야 합니다.
	SetRegistryKey(_T("로컬 응용 프로그램 마법사에서 생성된 응용 프로그램"));

	HWND hWnd = mrc::initWindows(0,0,800,600,&mrcTest::MyMsgProc);

	mrcSig::Init(mrc::getDevice(),hWnd);

	boost::timer timer;
	timer.restart();

	MSG msg;
	ZeroMemory(&msg, sizeof(msg));
	while (msg.message != WM_QUIT )
	{
		if (PeekMessage(&msg, NULL, 0U, 0U, PM_REMOVE))
		{
			TranslateMessage(&msg);
			DispatchMessage(&msg);
		}
		else
		{
			try
			{
				static double time  = timer.elapsed();
				double boostTime = timer.elapsed();
				double elapsedTime =  boostTime - time;
				time = boostTime;

				if( elapsedTime > 1 )
					elapsedTime = 1;

				if( mrcTest::isPlay() )
				{
					mrc::updateLayer((mrc::real)elapsedTime);
					mrcSig::Update((mrc::real)elapsedTime);
				}


				mrc::clear();
				mrc::renderLayer();

//				mrc::present();


			}
			catch (const mrc::Exception& E)
			{
				mrc::ShowMessage( ("error : ") + E.getMessage() +"\n" );
				mrc::resetAll();
			}

		}
	}
	mrcSig::Release();
	mrc::release();

	// 대화 상자가 닫혔으므로 응용 프로그램의 메시지 펌프를 시작하지 않고  응용 프로그램을 끝낼 수 있도록 FALSE를
	// 반환합니다.
	return FALSE;
}
