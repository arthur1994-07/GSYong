#include "pch.h"

#include "NSGlow.h"

// ----------------------------------------------------------------------------
#include "../../../SigmaCore/DebugInclude.h"
// ----------------------------------------------------------------------------


//Shaft
namespace NSGlow
{
	void SetFX( TSTRING& strFX )
	{
		strFX = 
			"// [2010.07.02] shhan \r\n"
			" \r\n"
			"float4	g_vOffset; \r\n"
			"//float Density = 1.f/256.f; \r\n"
			"float Weight; \r\n"
			"float Decay; \r\n"
			"float Exposure = 1.f; \r\n"
			" \r\n"
			"texture BaseTex; \r\n"
			" \r\n"
			"#define NUM_SAMPLES 3 \r\n"
			"#define MAX_GAUSS_SAMPLE 13 \r\n"
			" \r\n"
			"float3 g_avTexCoordOffset_Weight[ MAX_GAUSS_SAMPLE ]; \r\n"
			" \r\n"
			"sampler BaseTexSampler = sampler_state  \r\n"
			"{ \r\n"
			"	Texture = (BaseTex); \r\n"
			"}; \r\n"
			" \r\n"
			"float4 PS_LightShafts( float2 texCoord : TEXCOORD0 ) : COLOR \r\n"
			"{ \r\n"
			"	// Calculate vector from pixel to light source in screen space.    \r\n"
			"	//  half2 deltaTexCoord = (texCoord - ScreenLightPos.xy); \r\n"
			" \r\n"
			"	// Divide by number of samples and scale by control factor.    \r\n"
			"	//half2  deltaTexCoord = texCoord; \r\n"
			"	half2 deltaTexCoord = g_vOffset.xy / NUM_SAMPLES;	//Density;    \r\n"
			" \r\n"
			"	// Store initial sample.    \r\n"
			"	half3 color = tex2D(BaseTexSampler, texCoord);    \r\n"
			" \r\n"
			"	// Set up illumination decay factor.    \r\n"
			"	half illuminationDecay = 1.0f;    \r\n"
			" \r\n"
			"	// Evaluate summation from Equation 3 NUM_SAMPLES iterations.    \r\n"
			"	for (int i = 0; i < NUM_SAMPLES; i++)    \r\n"
			"	{    \r\n"
			"		// Step sample location along ray.   \r\n"
			"		texCoord -= deltaTexCoord; \r\n"
			" \r\n"
			"		// Retrieve sample at new location.    \r\n"
			"		float4 sample = tex2D(BaseTexSampler, texCoord); \r\n"
			" \r\n"
			"		// Apply sample attenuation scale/decay factors.    \r\n"
			"		sample *= illuminationDecay * Weight;    \r\n"
			" \r\n"
			"		// Accumulate combined color.    \r\n"
			"		color += sample;    \r\n"
			" \r\n"
			"		// Update exponential decay factor.    \r\n"
			"		illuminationDecay *= Decay;    \r\n"
			"	}    \r\n"
			" \r\n"
			"	// Output final color with a further scale control factor.    \r\n"
			"	return float4( color * Exposure, 1);    \r\n"
			"} \r\n"
			" \r\n"
			"float4 PS_GaussBlur5x5( float2 texCoord : TEXCOORD0 ) : COLOR \r\n"
			"{ \r\n"
			"	float4 sample = 0.f; \r\n"
			" \r\n"
			"	for( int i=0; i<MAX_GAUSS_SAMPLE; ++i ) \r\n"
			"	{ \r\n"
			"		sample += g_avTexCoordOffset_Weight[i].z * tex2D( BaseTexSampler, texCoord + g_avTexCoordOffset_Weight[i].xy ); \r\n"
			"	} \r\n"
			"	return sample; \r\n"
			"} \r\n"
			" \r\n"
			"technique tec0 \r\n"
			"{ \r\n"
			"	pass p0 \r\n"
			"	{ \r\n"
			"		PixelShader = compile ps_1_4 PS_LightShafts(); \r\n"
			"		MinFilter[0] = Point; \r\n"
			"	} \r\n"
			" \r\n"
			"	pass p1 \r\n"
			"	{ \r\n"
			"		PixelShader = compile ps_2_0 PS_GaussBlur5x5(); \r\n"
			" \r\n"
			"		//	MinFilter[0] = Point; \r\n"
			"		AddressU[0] = Clamp; \r\n"
			"		AddressV[0] = Clamp; \r\n"
			"	} \r\n"
			"} \r\n";
	}
}